from odoo import fields, models, api, _


class FuelTest(models.Model):
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _name = 'lmm.fuel_test'
    _description = 'Fuel Tests Module'

    name = fields.Char(
        required=True,
        string=_("Fuel Tests"),
        default="Autogenerated on Save",
        copy=False
    )

    vehicle_id = fields.Many2one(
        comodel_name="lmm.vehicle",
        string=_("Vehicle"),
        index=True,
        tracking=True
    )

    technician = fields.Char(
        required=True,
        string=_("Technician"),
    )

    device_id = fields.Many2one(
        comodel_name="lmm.device",
        string=_("Device"),
        index=True,
        tracking=True
    )

    fuel_test_samples_ids = fields.One2many(
        comodel_name="lmm.fuel_test_samples",
        inverse_name="fuel_test_id",
        string=_("Test Samples"),
    )

    fuel_test_samples_count = fields.Integer(
        string=_("Fuel Samples Count"),
        compute='_compute_fuel_test_samples_count',
    )

    def _compute_fuel_test_samples_count(self):
        for rec in self:
            rec.fuel_test_samples_count = self.env['lmm.fuel_test_samples'].search_count(
                [('fuel_test_id', '=', rec.id)]
            )

    @api.model
    def create(self, vals):
        seq = self.env['ir.sequence'].next_by_code('lmm.fuel_test') or _('New')
        vals['name'] = seq
        return super(FuelTest, self).create(vals)

    def copy(self, default=None):
        default = dict(default or {})

        copied_count = self.search_count(
            [('name', '=like', u"Copy of {}%".format(self.name))])
        if not copied_count:
            new_name = u"Copy of {}".format(self.name)
        else:
            new_name = u"Copy of {} ({})".format(self.name, copied_count)

        default['name'] = new_name
        return super(FuelTest, self).copy(default)

    _sql_constraints = [
        ('name_unique',
         'UNIQUE(name)',
         "The fuel test id must be unique"),
    ]
